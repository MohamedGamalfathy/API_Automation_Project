-------------------------------------------------------------------------------------------------------------------------

Get your credential values and try the first Trello API:

--------------------------------------------------------
BASEURL : https://api.trello.com
---------------------------------------
Key : 19e99b439679fe1f59757d1491f4b7db
--------------------------------------------------------------------------
Token : 83bcb6fb702678f4f06fa038dd4955a16fd46a5fcf5a595fa912daae4a2962a1
--------------------------------------------------------------------------

 API : GET >> {{BASEURL}}/1/members/me?boards=open&key={{Key}}&token={{Token}}

 Description : You need to make sure that this subobject is shown inside the response (which contains boards)

 Response Body :

    "boards": 
    
    [
        {
            "id": "63216d14f4a58104c7e58ecf",
            "name": "API_Automatin_Project",
            "closed": false,
            "idOrganization": "63200aa95220e801e5ea82aa",
            "pinned": false
        },
        {
            "id": "6322282a07508c014ff14d8a",
            "name": "Selenium_Automation_Project",
            "closed": false,
            "idOrganization": "63200aa95220e801e5ea82aa",
            "pinned": false
        }
    ]

-------------------------------------------------------------------
Requests & Test cases on Trello's APIs using Postman :
-------------------------------------------------------------------

Request (1) : Create a Board 
------------------------------

 API : POST >> {{BASEURL}}/1/boards/?name=Testing Board&key={{Key}}&token={{Token}}

 Test Case 1 : confirm its default value of closed is false 
 Expected Result: false
 Actual Result: false
 Status: Pass

 Test Case 2 : confirm its default value of permissionLevel is private
 Expected Result: private
 Actual Result: private
 Status: Pass

 Test Case 3 : confirm its default value of canBePublic is true
 Expected Result: true
 Actual Result: true
 Status: Pass

 Test Case 4 : confirm its default value of canInvite is true
 Expected Result: true
 Actual Result: true
 Status: Pass

------------------------------------------------------------------------------------------------------

Request (2) : Get Boards Number 
---------------------------------

 API: GET >> {{BASEURL}}/1/members/me?boards=open&key={{Key}}&token={{Token}}

 Test Case 1 : verify that number of boards in the response is above 1 
 Expected Result: 200 ok
 Actual Result: 200 0k
 Status: Pass
 
---------------------------------------------------------------------------------------------------------------------
// var jsonData = pm.response.json() 
---------------------------------------------------------------------------------------------------------------------
// var boards_num = jsonDate.boards.length
---------------------------------------------------------------------------------------------------------------------
//firstBoardID >>  pm.globals.set("firstBoardID", jsonData.boards[0].id);
---------------------------------------------------------------------------------------------------------------------
//lastBoardID  >>  pm.globals.set("lastBoardID", jsonData.boards[boards_num-1].id)
---------------------------------------------------------------------------------------------------------------------

 Request (3) : Delete a Board
-------------------------------------

 API : DELETE >> {{BASEURL}}/1/boards/:id?key={{Key}}&token={{Token}}							  

 Test Case 1 : response should be 200 OK
 Expected Result: 200 ok
 Actual Result: 200 0k
 Status: Pass


 Test Case 1 : Response Body  contain a "board is removed successfully".
 Expected Result: true
 Actual Result: false
 Status: failed 	

----------------------------------------------------------------------------------------------------------------------

Request (4) : Create a New List 
---------------------------------

 API : POST >> {{BASEURL}}/1/lists?name=Testing List&idBoard={{lastBoardID}}&key={{Key}}&token={{Token}}

 Test Case 1 : Verify id key exist in the response  
 Expected Result: id Key exists
 Actual Result: id key exists
 Status: Pass

 Test Case 2 : Verify name key exist in the response  
 Expected Result: name key exists
 Actual Result: name key exists
 Status: Pass

 Test Case 3 : Verify idBoard key exist in the response  
 Expected Result: idBoard key exists
 Actual Result: idBoard key exists
 Status: Pass

 Test Case 4 : confirm its default value of closed is false
 Expected Result: false
 Actual Result: false
 Status: Pass

 Test Case 5 : confirm its default value of limits is empty
 Expected Result:  limits are empty object {}
 Actual Result:  limits are empty object {}
 Status: Pass

------------------------------------------------------------------------------------------------------

Request (5) : Get Lists on a Board 
------------------------------------

 API: GET >> {{BASEURL}}/1/boards/:id/lists?key={{Key}}&token={{Token}}

 Test Case 1 : verify that the number of lists in the response is 3 //[default lists are To Do, Doing, Done].

 Expected Result: 200 ok
 Actual Result: 200 0k
 Status: Pass
 
---------------------------------------------------------------------------------------------------------------------
// var jsonData = pm.response.json() 
---------------------------------------------------------------------------------------------------------------------
// var lists_num = jsonDate.length
---------------------------------------------------------------------------------------------------------------------
//firstListID >>  pm.globals.set("firstListID", jsonData[0].id);
---------------------------------------------------------------------------------------------------------------------
//lastListID  >>  pm.globals.set("lastListID", jsonData[lists_num-1].id)
---------------------------------------------------------------------------------------------------------------------

 Request (6) : Archive or unarchive a list
---------------------------------------------

 API : PUT >> {{BASEURL}}/1/lists/:{id}/closed?key={{Key}}&token={{Token}}&value=true							  

 Test Case 1 : response should be 200 OK
 Expected Result: 200 ok
 Actual Result: 200 0k
 Status: Pass


 Test Case 2 : confirm its default value of closed is true 
 Expected Result: true
 Actual Result: true
 Status: Pass	

 Test Case 3 : Response Headers include a key called "Set-Cookie" and its value contains the text "isEnterpriseAdmin%3Dfalse". 
 Expected Result: "isEnterpriseAdmin%3Dfalse"
 Actual Result: "isEnterpriseAdmin%3Dfalse"
 Status: Pass


